{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\clicker game\\\\clicker-game\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport gameData from \"./gameData.js\";\nimport Building from \"./Building\";\nimport Resource from \"./Resource\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      buildings: gameData.buildingData,\n      resources: gameData.resourceData\n    };\n    this.HandleClick = this.HandleClick.bind(this);\n    this.HandleChange = this.HandleChange.bind(this);\n    this.buy = this.buy.bind(this);\n  }\n\n  HandleChange(event) {}\n\n  HandleClick(event) {\n    const name = event.target.name;\n    const target = this.state.buildings.find(building => building.name === name);\n    const countCurrent = target.count + 1;\n\n    if (target.isBuyable === true) {\n      this.buy(target);\n      let lastBuildings = this.state.buildings.slice();\n      let newBuildings = lastBuildings.map(building => {\n        if (building.name === name) building.count = countCurrent;\n        return building;\n      });\n      console.log(newBuildings);\n      this.setState({\n        buildings: newBuildings\n      });\n    } else {\n      console.log(\"notBuyable\");\n    }\n  }\n\n  buy(target) {\n    const [r, g, b] = target.price;\n    let lastResources = this.state.resources.slice();\n    let newResources = lastResources.map(resource => resource -= target.price.filter(price => price === resource));\n    this.setState({\n      resouces: newResources\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    console.log(gameData);\n    const buildings = this.state.buildings.map(buildingData => {\n      return /*#__PURE__*/React.createElement(Building, {\n        name: buildingData.name,\n        buyPrice: buildingData.buyPrice,\n        count: buildingData.count,\n        subjectsOfIncrease: buildingData.subjectsOfIncrease,\n        isBuyable: buildingData.isBuyable,\n        sellPrice: buildingData.sellPrice,\n        isUnlocked: buildingData.isUnlocked,\n        HandleClick: this.HandleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      });\n    });\n    const resources = this.state.resources.map(resourceData => {\n      return /*#__PURE__*/React.createElement(Resource, {\n        name: resourceData.name,\n        resouceMax: resourceData.resourceMax,\n        isUnlocked: resourceData.isUnlocked,\n        changePerTick: resourceData.changePerTick,\n        counterTillStopped: resourceData.countTillStopped,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, buildings, resources);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/clicker game/clicker-game/src/App.js"],"names":["React","gameData","Building","Resource","App","Component","constructor","state","buildings","buildingData","resources","resourceData","HandleClick","bind","HandleChange","buy","event","name","target","find","building","countCurrent","count","isBuyable","lastBuildings","slice","newBuildings","map","console","log","setState","r","g","b","price","lastResources","newResources","resource","filter","resouces","render","buyPrice","subjectsOfIncrease","sellPrice","isUnlocked","resourceMax","changePerTick","countTillStopped"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport gameData from \"./gameData.js\"\nimport Building from \"./Building\"\nimport Resource from \"./Resource\"\n\nclass App extends React.Component \n  {\n  constructor()\n    {\n    super();\n    this.state = {\n      buildings:gameData.buildingData,\n      resources:gameData.resourceData\n\n    };\n   this.HandleClick = this.HandleClick.bind(this);\n   this.HandleChange = this.HandleChange.bind(this);\n   this.buy = this.buy.bind(this);\n\n  }\n  HandleChange(event)\n    {\n\n  }\n  HandleClick(event)\n    {\n    const name = event.target.name;\n    const target = this.state.buildings.find(building=>building.name===name);\n    const countCurrent= target.count + 1;\n\n\n    if(target.isBuyable === true)\n      {\n      this.buy(target);  \n      let lastBuildings = this.state.buildings.slice();\n      let newBuildings = lastBuildings.map(building=>\n        {\n        if(building.name === name)\n          building.count = countCurrent;\n        return building;\n      }\n\n      )\n\n      console.log(newBuildings)\n     this.setState({buildings:newBuildings});\n    }\n\n    else{\n      console.log(\"notBuyable\");\n    }\n  }\n  buy(target) \n    { \n    const[r,g,b] = target.price;\n    let lastResources = this.state.resources.slice();\n    let newResources = lastResources.map(resource=>resource -= target.price.filter(price=> price === resource))\n    this.setState({resouces:newResources});\n\n  }\n\n  render()\n    {\n     console.log(this.state);\n     console.log(gameData); \n    const buildings = this.state.buildings.map(buildingData=>\n      {\n      return(\n        <Building \n          name ={buildingData.name}\n          buyPrice={buildingData.buyPrice}\n          count = {buildingData.count}\n          subjectsOfIncrease = {buildingData.subjectsOfIncrease}\n          isBuyable = {buildingData.isBuyable}\n          sellPrice = {buildingData.sellPrice}\n          isUnlocked = {buildingData.isUnlocked}\n          HandleClick = {this.HandleClick}\n          \n        />)\n    });\n    const resources = this.state.resources.map(resourceData=>\n      {\n      return(\n        <Resource \n         name ={resourceData.name}\n         resouceMax = {resourceData.resourceMax}\n          isUnlocked = {resourceData.isUnlocked}\n          changePerTick = {resourceData.changePerTick}\n          counterTillStopped = {resourceData.countTillStopped}\n       \n        />)\n    })   \n  \n\n\n\n\n\n  return (\n\n\n\n\n\n        <div className=\"App\">\n        {buildings}\n{resources}\n        </div>\n       );\n      }\n    \n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}