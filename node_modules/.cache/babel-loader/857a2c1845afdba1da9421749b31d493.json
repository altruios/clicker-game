{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\clicker game\\\\clicker-game\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport gameData from \"./gameData.js\";\nimport Building from \"./Building\";\nimport Resource from \"./Resource\";\nimport Clicker from \"./Clicker\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      buildings: gameData.buildingData,\n      resources: gameData.resourceData,\n      clickers: gameData.clickerData\n    };\n    this.handleClicker = this.handleClicker.bind(this);\n    this.HandleChange = this.HandleChange.bind(this);\n    this.buy = this.buy.bind(this);\n  }\n\n  gameTime() {\n    const gameTick = setInterval(() => {\n      this.state.resources.forEach(resource => this.tickResource(resource));\n    }, 100);\n  }\n\n  tickResource(resource) {\n    const targetResource = resource;\n    this.setState(prevState => {\n      const newResources = prevState.resources.map(lastResource => {\n        if (lastResource.name === targetResource.name) {\n          resource.amount = Number(Math.min(resource.max, resource.amount + resource.changePerTick).toFixed(4));\n          resource.counterTillStopped = Math.max(0, resource.counterTillStopped - resource.changePerTick);\n        }\n\n        return lastResource;\n      });\n      return {\n        resources: newResources\n      };\n    });\n  }\n\n  componentDidMount(prevProps, prevState) {\n    this.gameTime();\n  }\n\n  HandleChange(event) {}\n\n  handleClicker(event) {\n    console.log(event);\n    const {\n      name,\n      value\n    } = event.target;\n    console.log(name, value);\n    this.setState(prevState => {\n      const targetClicker = prevState.clickers.find(x => x.name === name);\n      const newResources = prevState.resources.map(resource => {\n        const targetIncrease = targetClicker.subjectsOfIncrease.find(x => x.name === resource.name);\n\n        if (targetIncrease) {\n          resource.amount = resource.amount + targetIncrease.amount;\n        }\n\n        return resource;\n      });\n      return {\n        resources: newResources\n      };\n    });\n  }\n\n  buy(target) {}\n\n  checkBuyingStatus() {}\n\n  render() {\n    const buildings = this.state.buildings.map(buildingData => {\n      return /*#__PURE__*/React.createElement(Building, {\n        name: buildingData.name,\n        buyPrice: buildingData.buyPrice,\n        count: buildingData.count,\n        subjectsOfIncrease: buildingData.subjectsOfIncrease,\n        isBuyable: buildingData.isBuyable,\n        sellPrice: buildingData.sellPrice,\n        isUnlocked: buildingData.isUnlocked,\n        key: buildingData.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      });\n    });\n    const resources = this.state.resources.map(resourceData => {\n      return /*#__PURE__*/React.createElement(Resource, {\n        name: resourceData.name,\n        resouceMax: resourceData.resourceMax,\n        isUnlocked: resourceData.isUnlocked,\n        changePerTick: resourceData.changePerTick,\n        counterTillStopped: resourceData.countTillStopped,\n        amount: resourceData.amount,\n        key: resourceData.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      });\n    });\n    const clickers = this.state.clickers.map(clickerData => {\n      return /*#__PURE__*/React.createElement(Clicker, {\n        name: clickerData.name,\n        handleClicker: this.handleClicker,\n        value: clickerData.amount,\n        key: clickerData.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, buildings, resources, clickers);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/clicker game/clicker-game/src/App.js"],"names":["React","gameData","Building","Resource","Clicker","App","Component","constructor","state","buildings","buildingData","resources","resourceData","clickers","clickerData","handleClicker","bind","HandleChange","buy","gameTime","gameTick","setInterval","forEach","resource","tickResource","targetResource","setState","prevState","newResources","map","lastResource","name","amount","Number","Math","min","max","changePerTick","toFixed","counterTillStopped","componentDidMount","prevProps","event","console","log","value","target","targetClicker","find","x","targetIncrease","subjectsOfIncrease","checkBuyingStatus","render","buyPrice","count","isBuyable","sellPrice","isUnlocked","resourceMax","countTillStopped"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport gameData from \"./gameData.js\"\nimport Building from \"./Building\"\nimport Resource from \"./Resource\"\nimport Clicker from \"./Clicker\"\nclass App extends React.Component \n  {\n  constructor()\n    {\n    super();\n    this.state = {\n      buildings:gameData.buildingData,\n      resources:gameData.resourceData,\n      clickers:gameData.clickerData\n\n    };\n   this.handleClicker = this.handleClicker.bind(this);\n   this.HandleChange = this.HandleChange.bind(this);\n   this.buy = this.buy.bind(this);\n\n  }\n  gameTime()\n  {\n  const gameTick = setInterval(()=>\n      {\n      this.state.resources.forEach(resource=>this.tickResource(resource));\n    },100);\n  }\n\n  tickResource(resource)\n    {\n    const targetResource = resource;  \n    this.setState((prevState) =>\n      {  \n      const newResources = prevState.resources.map(lastResource=>\n        {\n        if(lastResource.name === targetResource.name)\n          {\n          resource.amount = Number(Math.min(resource.max,resource.amount + resource.changePerTick).toFixed(4));\n          resource.counterTillStopped = Math.max(0, resource.counterTillStopped - resource.changePerTick);\n        }\n        return lastResource;\n      }); \n\n      return {resources: newResources}\n    });\n  }\n\n  componentDidMount(prevProps, prevState)\n    {\n    this.gameTime(); \n  }\n    \n  HandleChange(event)\n    {\n\n  }\n  handleClicker(event)\n    {\n    console.log(event);\n    const {name, value} = event.target;  \n    console.log(name, value);\n\n    this.setState(prevState=>\n      {\n     const targetClicker = prevState.clickers.find(x=>x.name ===name);\n      const newResources = prevState.resources.map(resource=>\n          {\n           const targetIncrease =  targetClicker.subjectsOfIncrease.find(x=>x.name===resource.name)\n          if(targetIncrease)\n            {\n            resource.amount = resource.amount + targetIncrease.amount;\n          }\n          return resource;\n        })\n\n\n      return {resources:newResources}\n    })\n  }\n  buy(target) \n    { \n   \n\n  }\n  checkBuyingStatus()\n    {\n\n    \n}\n\n\n \n  \n  render()\n    {\n    const buildings = this.state.buildings.map(buildingData=>\n      {\n      return(\n        <Building \n          name ={buildingData.name}\n          buyPrice={buildingData.buyPrice}\n          count = {buildingData.count}\n          subjectsOfIncrease = {buildingData.subjectsOfIncrease}\n          isBuyable = {buildingData.isBuyable}\n          sellPrice = {buildingData.sellPrice}\n          isUnlocked = {buildingData.isUnlocked}\n          key={buildingData.name}\n          \n        />)\n    });\n    const resources = this.state.resources.map(resourceData=>\n      {\n\n        return(\n\n        <Resource \n         name ={resourceData.name}\n         resouceMax = {resourceData.resourceMax}\n          isUnlocked = {resourceData.isUnlocked}\n          changePerTick = {resourceData.changePerTick}\n          counterTillStopped = {resourceData.countTillStopped}\n          amount={resourceData.amount}\n          key={resourceData.name}\n\n        />)\n    });   \n\n    const clickers = this.state.clickers.map(clickerData=>\n      {\n      return(\n        <Clicker\n          name={clickerData.name} \n          handleClicker = {this.handleClicker}\n          value = {clickerData.amount}\n          key={clickerData.name}\n        />\n\n      )\n    })\n\n\n\n\n  return (\n\n        <div className=\"App\">\n        {buildings}\n        {resources}\n        {clickers}\n        </div>\n       );\n      }\n    \n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}