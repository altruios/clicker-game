{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\clicker game\\\\clicker-game\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport gameData from \"./gameData.js\";\nimport Building from \"./Building\";\nimport Resource from \"./Resource\";\nimport Clicker from \"./Clicker\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      buildings: gameData.buildingData,\n      resources: gameData.resourceData,\n      clickers: gameData.clickerData\n    };\n    this.HandleClick = this.HandleClick.bind(this);\n    this.HandleChange = this.HandleChange.bind(this);\n    this.buy = this.buy.bind(this);\n    this.gainResource = this.gainResource.bind(this);\n  }\n\n  gameTime() {\n    const gameTick = setInterval(() => {\n      this.tickResource();\n    }, 100);\n  }\n\n  tickResource(resource) {\n    this.setState(prevState => {\n      const newResources = prevState.resources.map(lastResource => {\n        if (lastResource.name === resource.name) {\n          resource.amount = resource.amount + resource.changePerTick;\n          resource.counterTillStopped = Math.max(0, resource.counterTillStopped - resource.changePerTick);\n        }\n\n        return lastResource;\n      });\n      return {\n        resources: newResources\n      };\n    });\n  }\n\n  componentDidMount(prevProps, prevState) {\n    this.gameTime();\n  }\n\n  HandleChange(event) {}\n\n  HandleClick(event) {}\n\n  buy(target) {}\n\n  checkBuyingStatus() {}\n\n  gainResource(event) {}\n\n  render() {\n    const buildings = this.state.buildings.map(buildingData => {\n      return /*#__PURE__*/React.createElement(Building, {\n        name: buildingData.name,\n        buyPrice: buildingData.buyPrice,\n        count: buildingData.count,\n        subjectsOfIncrease: buildingData.subjectsOfIncrease,\n        isBuyable: buildingData.isBuyable,\n        sellPrice: buildingData.sellPrice,\n        isUnlocked: buildingData.isUnlocked,\n        HandleClick: this.HandleClick,\n        key: buildingData.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      });\n    });\n    const resources = this.state.resources.map(resourceData => {\n      return /*#__PURE__*/React.createElement(Resource, {\n        name: resourceData.name,\n        resouceMax: resourceData.resourceMax,\n        isUnlocked: resourceData.isUnlocked,\n        changePerTick: resourceData.changePerTick,\n        counterTillStopped: resourceData.countTillStopped,\n        amount: resourceData.amount,\n        key: resourceData.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      });\n    });\n    const clickers = this.state.clickers.map(clickerData => {\n      return /*#__PURE__*/React.createElement(Clicker, {\n        name: clickerData.name,\n        gainResource: this.gainResource,\n        value: clickerData.amount,\n        key: clickerData.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, buildings, resources, clickers);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/clicker game/clicker-game/src/App.js"],"names":["React","gameData","Building","Resource","Clicker","App","Component","constructor","state","buildings","buildingData","resources","resourceData","clickers","clickerData","HandleClick","bind","HandleChange","buy","gainResource","gameTime","gameTick","setInterval","tickResource","resource","setState","prevState","newResources","map","lastResource","name","amount","changePerTick","counterTillStopped","Math","max","componentDidMount","prevProps","event","target","checkBuyingStatus","render","buyPrice","count","subjectsOfIncrease","isBuyable","sellPrice","isUnlocked","resourceMax","countTillStopped"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport gameData from \"./gameData.js\"\nimport Building from \"./Building\"\nimport Resource from \"./Resource\"\nimport Clicker from \"./Clicker\"\nclass App extends React.Component \n  {\n  constructor()\n    {\n    super();\n    this.state = {\n      buildings:gameData.buildingData,\n      resources:gameData.resourceData,\n      clickers:gameData.clickerData\n\n    };\n   this.HandleClick = this.HandleClick.bind(this);\n   this.HandleChange = this.HandleChange.bind(this);\n   this.buy = this.buy.bind(this);\n   this.gainResource = this.gainResource.bind(this);\n\n  }\n  gameTime()\n  {\n  const gameTick = setInterval(()=>\n      {\n      this.tickResource();\n    },100);\n  }\n\n  tickResource(resource)\n    {\n    this.setState((prevState) =>\n      {  \n      const newResources = prevState.resources.map(lastResource=>\n        {\n        if(lastResource.name === resource.name)\n          {\n          resource.amount = resource.amount + resource.changePerTick;\n          resource.counterTillStopped = Math.max(0, resource.counterTillStopped - resource.changePerTick);\n        }\n        return lastResource;\n      }); \n\n      return {resources: newResources}\n    });\n  }\n\n  componentDidMount(prevProps, prevState)\n    {\n    this.gameTime(); \n  }\n    \n  HandleChange(event)\n    {\n\n  }\n  HandleClick(event)\n    {\n   \n  }\n  buy(target) \n    { \n   \n\n  }\n  checkBuyingStatus()\n    {\n\n    \n}\n\n\n  gainResource(event)\n    {\n \n\n    \n       \n      \n     }\n  \n  render()\n    {\n    const buildings = this.state.buildings.map(buildingData=>\n      {\n      return(\n        <Building \n          name ={buildingData.name}\n          buyPrice={buildingData.buyPrice}\n          count = {buildingData.count}\n          subjectsOfIncrease = {buildingData.subjectsOfIncrease}\n          isBuyable = {buildingData.isBuyable}\n          sellPrice = {buildingData.sellPrice}\n          isUnlocked = {buildingData.isUnlocked}\n          HandleClick = {this.HandleClick}\n          key={buildingData.name}\n          \n        />)\n    });\n    const resources = this.state.resources.map(resourceData=>\n      {\n\n        return(\n\n        <Resource \n         name ={resourceData.name}\n         resouceMax = {resourceData.resourceMax}\n          isUnlocked = {resourceData.isUnlocked}\n          changePerTick = {resourceData.changePerTick}\n          counterTillStopped = {resourceData.countTillStopped}\n          amount={resourceData.amount}\n          key={resourceData.name}\n\n        />)\n\n    })   \n\n    const clickers = this.state.clickers.map(clickerData=>\n      {\n      return(\n        <Clicker\n          name={clickerData.name}  \n          gainResource = {this.gainResource}\n          value = {clickerData.amount}\n          key={clickerData.name}\n\n        />\n\n        )\n    })\n\n\n\n\n  return (\n\n        <div className=\"App\">\n        {buildings}\n        {resources}\n        {clickers}\n        </div>\n       );\n      }\n    \n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}