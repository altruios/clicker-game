{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\clicker game\\\\clicker-game\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport gameData from \"./gameData.js\";\nimport Building from \"./Building\";\nimport Resource from \"./Resource\";\nimport Clicker from \"./Clicker\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      buildings: gameData.buildingData,\n      resources: gameData.resourceData,\n      clickers: gameData.clickerData\n    };\n    this.HandleClick = this.HandleClick.bind(this);\n    this.HandleChange = this.HandleChange.bind(this);\n    this.buy = this.buy.bind(this);\n    this.gainResource = this.gainResource.bind(this);\n  }\n\n  HandleChange(event) {}\n\n  HandleClick(event) {\n    const name = event.target.name;\n    const target = this.state.buildings.find(building => building.name === name);\n    const countCurrent = target.count + 1;\n\n    if (target.isBuyable === true) {\n      this.buy(target);\n      let lastBuildings = this.state.buildings.slice();\n      let newBuildings = lastBuildings.map(building => {\n        if (building.name === name) building.count = countCurrent;\n        return building;\n      });\n      this.setState({\n        buildings: newBuildings\n      });\n    } else {\n      console.log(\"notBuyable\");\n    }\n  }\n\n  buy(target) {\n    const cost = Array.from(target.buyPrice);\n    let lastResources = this.state.resources.slice();\n    let newResources = lastResources.map(resource => resource -= cost.filter(price => price === resource));\n    this.setState({\n      resouces: newResources\n    });\n  }\n\n  gainResource(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState(prevState => {\n      const newResources = prevState.resources.map(resource => {\n        if (resource.name === name) {\n          resource.amount = resource.amount + value;\n        }\n\n        return resource;\n      });\n      return {\n        resources: newResources\n      };\n    });\n  }\n\n  render() {\n    const buildings = this.state.buildings.map(buildingData => {\n      return /*#__PURE__*/React.createElement(Building, {\n        name: buildingData.name,\n        buyPrice: buildingData.buyPrice,\n        count: buildingData.count,\n        subjectsOfIncrease: buildingData.subjectsOfIncrease,\n        isBuyable: buildingData.isBuyable,\n        sellPrice: buildingData.sellPrice,\n        isUnlocked: buildingData.isUnlocked,\n        HandleClick: this.HandleClick,\n        key: buildingData.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      });\n    });\n    const resources = this.state.resources.map(resourceData => {\n      return /*#__PURE__*/React.createElement(Resource, {\n        name: resourceData.name,\n        resouceMax: resourceData.resourceMax,\n        isUnlocked: resourceData.isUnlocked,\n        changePerTick: resourceData.changePerTick,\n        counterTillStopped: resourceData.countTillStopped,\n        amount: resourceData.amount,\n        key: resourceData.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      });\n    });\n    const clickers = this.state.clickers.map(clickerData => {\n      return /*#__PURE__*/React.createElement(Clicker, {\n        name: clickerData.name,\n        HandleClick: this.gainResource,\n        amount: clickerData.amount,\n        key: clickerData.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, buildings, resources, clickers);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/clicker game/clicker-game/src/App.js"],"names":["React","gameData","Building","Resource","Clicker","App","Component","constructor","state","buildings","buildingData","resources","resourceData","clickers","clickerData","HandleClick","bind","HandleChange","buy","gainResource","event","name","target","find","building","countCurrent","count","isBuyable","lastBuildings","slice","newBuildings","map","setState","console","log","cost","Array","from","buyPrice","lastResources","newResources","resource","filter","price","resouces","value","prevState","amount","render","subjectsOfIncrease","sellPrice","isUnlocked","resourceMax","changePerTick","countTillStopped"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AACA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CACE;AACAC,EAAAA,WAAW,GACT;AACA;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAACR,QAAQ,CAACS,YADR;AAEXC,MAAAA,SAAS,EAACV,QAAQ,CAACW,YAFR;AAGXC,MAAAA,QAAQ,EAACZ,QAAQ,CAACa;AAHP,KAAb;AAMD,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,GAAL,GAAW,KAAKA,GAAL,CAASF,IAAT,CAAc,IAAd,CAAX;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AAEA;;AACDC,EAAAA,YAAY,CAACG,KAAD,EACV,CAED;;AACDL,EAAAA,WAAW,CAACK,KAAD,EACT;AACA,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,UAAMC,MAAM,GAAG,KAAKd,KAAL,CAAWC,SAAX,CAAqBc,IAArB,CAA0BC,QAAQ,IAAEA,QAAQ,CAACH,IAAT,KAAgBA,IAApD,CAAf;AACA,UAAMI,YAAY,GAAEH,MAAM,CAACI,KAAP,GAAe,CAAnC;;AAGA,QAAGJ,MAAM,CAACK,SAAP,KAAqB,IAAxB,EACE;AACA,WAAKT,GAAL,CAASI,MAAT;AACA,UAAIM,aAAa,GAAG,KAAKpB,KAAL,CAAWC,SAAX,CAAqBoB,KAArB,EAApB;AACA,UAAIC,YAAY,GAAGF,aAAa,CAACG,GAAd,CAAkBP,QAAQ,IAC3C;AACA,YAAGA,QAAQ,CAACH,IAAT,KAAkBA,IAArB,EACEG,QAAQ,CAACE,KAAT,GAAiBD,YAAjB;AACF,eAAOD,QAAP;AACD,OALkB,CAAnB;AASD,WAAKQ,QAAL,CAAc;AAACvB,QAAAA,SAAS,EAACqB;AAAX,OAAd;AACA,KAdD,MAgBI;AACFG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AACF;;AACDhB,EAAAA,GAAG,CAACI,MAAD,EACD;AACA,UAAMa,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWf,MAAM,CAACgB,QAAlB,CAAb;AACA,QAAIC,aAAa,GAAG,KAAK/B,KAAL,CAAWG,SAAX,CAAqBkB,KAArB,EAApB;AACA,QAAIW,YAAY,GAAGD,aAAa,CAACR,GAAd,CAAkBU,QAAQ,IAAEA,QAAQ,IAAIN,IAAI,CAACO,MAAL,CAAYC,KAAK,IAAGA,KAAK,KAAKF,QAA9B,CAAxC,CAAnB;AACA,SAAKT,QAAL,CAAc;AAACY,MAAAA,QAAQ,EAACJ;AAAV,KAAd;AACD;;AACDrB,EAAAA,YAAY,CAACC,KAAD,EACV;AACA,UAAM;AAACC,MAAAA,IAAD;AAAMwB,MAAAA;AAAN,QAAezB,KAAK,CAACE,MAA3B;AAEA,SAAKU,QAAL,CAAgBc,SAAD,IACb;AACA,YAAMN,YAAY,GAAIM,SAAS,CAACnC,SAAV,CAAoBoB,GAApB,CAAwBU,QAAQ,IACpD;AACA,YAAGA,QAAQ,CAACpB,IAAT,KAAkBA,IAArB,EACE;AACAoB,UAAAA,QAAQ,CAACM,MAAT,GAAkBN,QAAQ,CAACM,MAAT,GAAkBF,KAApC;AACD;;AACD,eAAOJ,QAAP;AACD,OAPqB,CAAtB;AASA,aAAO;AAAC9B,QAAAA,SAAS,EAAE6B;AAAZ,OAAP;AACD,KAZD;AAaD;;AACDQ,EAAAA,MAAM,GACJ;AACA,UAAMvC,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAAX,CAAqBsB,GAArB,CAAyBrB,YAAY,IACrD;AACA,0BACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAGA,YAAY,CAACW,IADtB;AAEE,QAAA,QAAQ,EAAEX,YAAY,CAAC4B,QAFzB;AAGE,QAAA,KAAK,EAAI5B,YAAY,CAACgB,KAHxB;AAIE,QAAA,kBAAkB,EAAIhB,YAAY,CAACuC,kBAJrC;AAKE,QAAA,SAAS,EAAIvC,YAAY,CAACiB,SAL5B;AAME,QAAA,SAAS,EAAIjB,YAAY,CAACwC,SAN5B;AAOE,QAAA,UAAU,EAAIxC,YAAY,CAACyC,UAP7B;AAQE,QAAA,WAAW,EAAI,KAAKpC,WARtB;AASE,QAAA,GAAG,EAAEL,YAAY,CAACW,IATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAaD,KAfiB,CAAlB;AAgBA,UAAMV,SAAS,GAAG,KAAKH,KAAL,CAAWG,SAAX,CAAqBoB,GAArB,CAAyBnB,YAAY,IACrD;AACA,0BAEE,oBAAC,QAAD;AACC,QAAA,IAAI,EAAGA,YAAY,CAACS,IADrB;AAEC,QAAA,UAAU,EAAIT,YAAY,CAACwC,WAF5B;AAGE,QAAA,UAAU,EAAIxC,YAAY,CAACuC,UAH7B;AAIE,QAAA,aAAa,EAAIvC,YAAY,CAACyC,aAJhC;AAKE,QAAA,kBAAkB,EAAIzC,YAAY,CAAC0C,gBALrC;AAME,QAAA,MAAM,EAAE1C,YAAY,CAACmC,MANvB;AAOS,QAAA,GAAG,EAAEnC,YAAY,CAACS,IAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;AAYD,KAdiB,CAAlB;AAgBA,UAAMR,QAAQ,GAAG,KAAKL,KAAL,CAAWK,QAAX,CAAoBkB,GAApB,CAAwBjB,WAAW,IAClD;AACA,0BACE,oBAAC,OAAD;AACE,QAAA,IAAI,EAAEA,WAAW,CAACO,IADpB;AAEE,QAAA,WAAW,EAAI,KAAKF,YAFtB;AAGE,QAAA,MAAM,EAAIL,WAAW,CAACiC,MAHxB;AAIE,QAAA,GAAG,EAAEjC,WAAW,CAACO,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAZgB,CAAjB;AAiBF,wBAEM;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCZ,SADD,EAECE,SAFD,EAGCE,QAHD,CAFN;AAQK;;AAnIL;;AAsIF,eAAeR,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport gameData from \"./gameData.js\"\nimport Building from \"./Building\"\nimport Resource from \"./Resource\"\nimport Clicker from \"./Clicker\"\nclass App extends React.Component \n  {\n  constructor()\n    {\n    super();\n    this.state = {\n      buildings:gameData.buildingData,\n      resources:gameData.resourceData,\n      clickers:gameData.clickerData\n\n    };\n   this.HandleClick = this.HandleClick.bind(this);\n   this.HandleChange = this.HandleChange.bind(this);\n   this.buy = this.buy.bind(this);\n   this.gainResource = this.gainResource.bind(this);\n\n  }\n  HandleChange(event)\n    {\n\n  }\n  HandleClick(event)\n    {\n    const name = event.target.name;\n    const target = this.state.buildings.find(building=>building.name===name);\n    const countCurrent= target.count + 1;\n\n\n    if(target.isBuyable === true)\n      {\n      this.buy(target);  \n      let lastBuildings = this.state.buildings.slice();\n      let newBuildings = lastBuildings.map(building=>\n        {\n        if(building.name === name)\n          building.count = countCurrent;\n        return building;\n      }\n\n      )\n\n     this.setState({buildings:newBuildings});\n    }\n\n    else{\n      console.log(\"notBuyable\");\n    }\n  }\n  buy(target) \n    { \n    const cost = Array.from(target.buyPrice);\n    let lastResources = this.state.resources.slice();\n    let newResources = lastResources.map(resource=>resource -= cost.filter(price=> price === resource))\n    this.setState({resouces:newResources});\n  }\n  gainResource(event)\n    {\n    const {name,value} = event.target;\n\n    this.setState( (prevState)=>\n      {\n      const newResources =  prevState.resources.map(resource=>\n        {\n        if(resource.name === name)  \n          {\n          resource.amount = resource.amount + value\n        }  \n        return resource;\n      });\n\n      return {resources: newResources}\n    });\n  }\n  render()\n    {\n    const buildings = this.state.buildings.map(buildingData=>\n      {\n      return(\n        <Building \n          name ={buildingData.name}\n          buyPrice={buildingData.buyPrice}\n          count = {buildingData.count}\n          subjectsOfIncrease = {buildingData.subjectsOfIncrease}\n          isBuyable = {buildingData.isBuyable}\n          sellPrice = {buildingData.sellPrice}\n          isUnlocked = {buildingData.isUnlocked}\n          HandleClick = {this.HandleClick}\n          key={buildingData.name}\n          \n        />)\n    });\n    const resources = this.state.resources.map(resourceData=>\n      {\n      return(\n\n        <Resource \n         name ={resourceData.name}\n         resouceMax = {resourceData.resourceMax}\n          isUnlocked = {resourceData.isUnlocked}\n          changePerTick = {resourceData.changePerTick}\n          counterTillStopped = {resourceData.countTillStopped}\n          amount={resourceData.amount}\n                 key={resourceData.name}\n\n        />)\n    })   \n\n    const clickers = this.state.clickers.map(clickerData=>\n      {\n      return(\n        <Clicker\n          name={clickerData.name}  \n          HandleClick = {this.gainResource}\n          amount = {clickerData.amount}\n          key={clickerData.name}\n\n        />\n\n        )\n    })\n\n\n\n\n  return (\n\n        <div className=\"App\">\n        {buildings}\n        {resources}\n        {clickers}\n        </div>\n       );\n      }\n    \n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}