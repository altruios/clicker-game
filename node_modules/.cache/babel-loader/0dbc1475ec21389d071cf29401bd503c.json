{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\clicker game\\\\clicker-game\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport gameData from \"./gameData.js\";\nimport Building from \"./Building\";\nimport Resource from \"./Resource\";\nimport Clicker from \"./Clicker\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      buildings: gameData.buildingData,\n      resources: gameData.resourceData,\n      clickers: gameData.clickerData\n    };\n    this.HandleClick = this.HandleClick.bind(this);\n    this.HandleChange = this.HandleChange.bind(this);\n    this.buy = this.buy.bind(this);\n    this.gainResource = this.gainResource.bind(this);\n  }\n\n  HandleChange(event) {}\n\n  HandleClick(event) {\n    const name = event.target.name;\n    const target = this.state.buildings.find(building => building.name === name);\n    const countCurrent = target.count + 1;\n    console.log(\"Test test test\");\n\n    if (target.isBuyable === true) {\n      this.buy(target);\n      let lastBuildings = this.state.buildings.slice();\n      let newBuildings = lastBuildings.map(building => {\n        if (building.name === name) building.count = countCurrent;\n        return building;\n      });\n      this.setState({\n        buildings: newBuildings\n      });\n    } else {\n      console.log(\"notBuyable\");\n    }\n  }\n\n  buy(target) {\n    console.log(\"test test buy\");\n    const cost = Array.from(target.buyPrice);\n    let lastResources = this.state.resources.slice();\n    let newResources = lastResources.map(resource => resource -= cost.filter(price => price === resource));\n    this.setState({\n      resouces: newResources\n    });\n  }\n\n  gainResource(event) {\n    console.count(\"gain button\");\n    const name = event.target.name;\n    this.setState(prevState => {\n      const newResources = prevState.resources.map(resource => {\n        const tempResource = resource;\n\n        if (resource.name === name) {\n          tempResource.amount = Number(resource.amount) + 1; //Number(prevState.clickers.find(x=>x.name===name).value)\n        }\n\n        return tempResource;\n      });\n      console.log(prevState.resources.find(item => item.name === name).amount, \"old\");\n      console.log(newResources.find(item => item.name === name).amount, \"new\");\n      return {\n        resources: newResources\n      };\n    });\n  }\n\n  render() {\n    const buildings = this.state.buildings.map(buildingData => {\n      return /*#__PURE__*/React.createElement(Building, {\n        name: buildingData.name,\n        buyPrice: buildingData.buyPrice,\n        count: buildingData.count,\n        subjectsOfIncrease: buildingData.subjectsOfIncrease,\n        isBuyable: buildingData.isBuyable,\n        sellPrice: buildingData.sellPrice,\n        isUnlocked: buildingData.isUnlocked,\n        HandleClick: this.HandleClick,\n        key: buildingData.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      });\n    });\n    const resources = this.state.resources.map(resourceData => {\n      return /*#__PURE__*/React.createElement(Resource, {\n        name: resourceData.name,\n        resouceMax: resourceData.resourceMax,\n        isUnlocked: resourceData.isUnlocked,\n        changePerTick: resourceData.changePerTick,\n        counterTillStopped: resourceData.countTillStopped,\n        amount: resourceData.amount,\n        key: resourceData.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      });\n    });\n    const clickers = this.state.clickers.map(clickerData => {\n      return /*#__PURE__*/React.createElement(Clicker, {\n        name: clickerData.name,\n        HandleClick: this.gainResource,\n        value: clickerData.amount,\n        key: clickerData.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, buildings, resources, clickers);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/xampp/htdocs/clicker game/clicker-game/src/App.js"],"names":["React","gameData","Building","Resource","Clicker","App","Component","constructor","state","buildings","buildingData","resources","resourceData","clickers","clickerData","HandleClick","bind","HandleChange","buy","gainResource","event","name","target","find","building","countCurrent","count","console","log","isBuyable","lastBuildings","slice","newBuildings","map","setState","cost","Array","from","buyPrice","lastResources","newResources","resource","filter","price","resouces","prevState","tempResource","amount","Number","item","render","subjectsOfIncrease","sellPrice","isUnlocked","resourceMax","changePerTick","countTillStopped"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AACA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CACE;AACAC,EAAAA,WAAW,GACT;AACA;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAACR,QAAQ,CAACS,YADR;AAEXC,MAAAA,SAAS,EAACV,QAAQ,CAACW,YAFR;AAGXC,MAAAA,QAAQ,EAACZ,QAAQ,CAACa;AAHP,KAAb;AAMD,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,GAAL,GAAW,KAAKA,GAAL,CAASF,IAAT,CAAc,IAAd,CAAX;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AAEA;;AACDC,EAAAA,YAAY,CAACG,KAAD,EACV,CAED;;AACDL,EAAAA,WAAW,CAACK,KAAD,EACT;AACA,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,UAAMC,MAAM,GAAG,KAAKd,KAAL,CAAWC,SAAX,CAAqBc,IAArB,CAA0BC,QAAQ,IAAEA,QAAQ,CAACH,IAAT,KAAgBA,IAApD,CAAf;AACA,UAAMI,YAAY,GAAEH,MAAM,CAACI,KAAP,GAAe,CAAnC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AAEA,QAAGN,MAAM,CAACO,SAAP,KAAqB,IAAxB,EACE;AACA,WAAKX,GAAL,CAASI,MAAT;AACA,UAAIQ,aAAa,GAAG,KAAKtB,KAAL,CAAWC,SAAX,CAAqBsB,KAArB,EAApB;AACA,UAAIC,YAAY,GAAGF,aAAa,CAACG,GAAd,CAAkBT,QAAQ,IAC3C;AACA,YAAGA,QAAQ,CAACH,IAAT,KAAkBA,IAArB,EACEG,QAAQ,CAACE,KAAT,GAAiBD,YAAjB;AACF,eAAOD,QAAP;AACD,OALkB,CAAnB;AASD,WAAKU,QAAL,CAAc;AAACzB,QAAAA,SAAS,EAACuB;AAAX,OAAd;AACA,KAdD,MAgBI;AACFL,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AACF;;AACDV,EAAAA,GAAG,CAACI,MAAD,EACD;AACOK,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEP,UAAMO,IAAI,GAAGC,KAAK,CAACC,IAAN,CAAWf,MAAM,CAACgB,QAAlB,CAAb;AACA,QAAIC,aAAa,GAAG,KAAK/B,KAAL,CAAWG,SAAX,CAAqBoB,KAArB,EAApB;AACA,QAAIS,YAAY,GAAGD,aAAa,CAACN,GAAd,CAAkBQ,QAAQ,IAAEA,QAAQ,IAAIN,IAAI,CAACO,MAAL,CAAYC,KAAK,IAAGA,KAAK,KAAKF,QAA9B,CAAxC,CAAnB;AACA,SAAKP,QAAL,CAAc;AAACU,MAAAA,QAAQ,EAACJ;AAAV,KAAd;AACD;;AACDrB,EAAAA,YAAY,CAACC,KAAD,EACV;AACAO,IAAAA,OAAO,CAACD,KAAR,CAAc,aAAd;AACA,UAAML,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,SAAKa,QAAL,CAAgBW,SAAD,IACb;AACA,YAAML,YAAY,GAAIK,SAAS,CAAClC,SAAV,CAAoBsB,GAApB,CAAwBQ,QAAQ,IACpD;AACA,cAAMK,YAAY,GAAGL,QAArB;;AACA,YAAGA,QAAQ,CAACpB,IAAT,KAAkBA,IAArB,EACE;AACAyB,UAAAA,YAAY,CAACC,MAAb,GAAsBC,MAAM,CAACP,QAAQ,CAACM,MAAV,CAAN,GAA0B,CAAhD,CADA,CACkD;AACnD;;AACD,eAAOD,YAAP;AACD,OARqB,CAAtB;AASAnB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,SAAS,CAAClC,SAAV,CAAoBY,IAApB,CAAyB0B,IAAI,IAAEA,IAAI,CAAC5B,IAAL,KAAYA,IAA3C,EAAiD0B,MAA7D,EAAqE,KAArE;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAYY,YAAY,CAACjB,IAAb,CAAkB0B,IAAI,IAAEA,IAAI,CAAC5B,IAAL,KAAYA,IAApC,EAA0C0B,MAAtD,EAA8D,KAA9D;AACA,aAAO;AAACpC,QAAAA,SAAS,EAAE6B;AAAZ,OAAP;AACD,KAdD;AAeD;;AACDU,EAAAA,MAAM,GACJ;AACA,UAAMzC,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAAX,CAAqBwB,GAArB,CAAyBvB,YAAY,IACrD;AACA,0BACE,oBAAC,QAAD;AACE,QAAA,IAAI,EAAGA,YAAY,CAACW,IADtB;AAEE,QAAA,QAAQ,EAAEX,YAAY,CAAC4B,QAFzB;AAGE,QAAA,KAAK,EAAI5B,YAAY,CAACgB,KAHxB;AAIE,QAAA,kBAAkB,EAAIhB,YAAY,CAACyC,kBAJrC;AAKE,QAAA,SAAS,EAAIzC,YAAY,CAACmB,SAL5B;AAME,QAAA,SAAS,EAAInB,YAAY,CAAC0C,SAN5B;AAOE,QAAA,UAAU,EAAI1C,YAAY,CAAC2C,UAP7B;AAQE,QAAA,WAAW,EAAI,KAAKtC,WARtB;AASE,QAAA,GAAG,EAAEL,YAAY,CAACW,IATpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAaD,KAfiB,CAAlB;AAgBA,UAAMV,SAAS,GAAG,KAAKH,KAAL,CAAWG,SAAX,CAAqBsB,GAArB,CAAyBrB,YAAY,IACrD;AACA,0BAEE,oBAAC,QAAD;AACC,QAAA,IAAI,EAAGA,YAAY,CAACS,IADrB;AAEC,QAAA,UAAU,EAAIT,YAAY,CAAC0C,WAF5B;AAGE,QAAA,UAAU,EAAI1C,YAAY,CAACyC,UAH7B;AAIE,QAAA,aAAa,EAAIzC,YAAY,CAAC2C,aAJhC;AAKE,QAAA,kBAAkB,EAAI3C,YAAY,CAAC4C,gBALrC;AAME,QAAA,MAAM,EAAE5C,YAAY,CAACmC,MANvB;AAOS,QAAA,GAAG,EAAEnC,YAAY,CAACS,IAP3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;AAYD,KAdiB,CAAlB;AAgBA,UAAMR,QAAQ,GAAG,KAAKL,KAAL,CAAWK,QAAX,CAAoBoB,GAApB,CAAwBnB,WAAW,IAClD;AACA,0BACE,oBAAC,OAAD;AACE,QAAA,IAAI,EAAEA,WAAW,CAACO,IADpB;AAEE,QAAA,WAAW,EAAI,KAAKF,YAFtB;AAGE,QAAA,KAAK,EAAIL,WAAW,CAACiC,MAHvB;AAIE,QAAA,GAAG,EAAEjC,WAAW,CAACO,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAZgB,CAAjB;AAiBF,wBAEM;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCZ,SADD,EAECE,SAFD,EAGCE,QAHD,CAFN;AAQK;;AAvIL;;AA0IF,eAAeR,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport gameData from \"./gameData.js\"\nimport Building from \"./Building\"\nimport Resource from \"./Resource\"\nimport Clicker from \"./Clicker\"\nclass App extends React.Component \n  {\n  constructor()\n    {\n    super();\n    this.state = {\n      buildings:gameData.buildingData,\n      resources:gameData.resourceData,\n      clickers:gameData.clickerData\n\n    };\n   this.HandleClick = this.HandleClick.bind(this);\n   this.HandleChange = this.HandleChange.bind(this);\n   this.buy = this.buy.bind(this);\n   this.gainResource = this.gainResource.bind(this);\n\n  }\n  HandleChange(event)\n    {\n\n  }\n  HandleClick(event)\n    {\n    const name = event.target.name;\n    const target = this.state.buildings.find(building=>building.name===name);\n    const countCurrent= target.count + 1;\n    console.log(\"Test test test\");\n\n    if(target.isBuyable === true)\n      {\n      this.buy(target);  \n      let lastBuildings = this.state.buildings.slice();\n      let newBuildings = lastBuildings.map(building=>\n        {\n        if(building.name === name)\n          building.count = countCurrent;\n        return building;\n      }\n\n      )\n\n     this.setState({buildings:newBuildings});\n    }\n\n    else{\n      console.log(\"notBuyable\");\n    }\n  }\n  buy(target) \n    { \n           console.log(\"test test buy\");\n \n    const cost = Array.from(target.buyPrice);\n    let lastResources = this.state.resources.slice();\n    let newResources = lastResources.map(resource=>resource -= cost.filter(price=> price === resource))\n    this.setState({resouces:newResources});\n  }\n  gainResource(event)\n    {\n    console.count(\"gain button\");\n    const name = event.target.name;\n    this.setState( (prevState)=>\n      {\n      const newResources =  prevState.resources.map(resource=>\n        {\n        const tempResource = resource;  \n        if(resource.name === name)  \n          {\n          tempResource.amount = Number(resource.amount) + 1 //Number(prevState.clickers.find(x=>x.name===name).value)\n        }  \n        return tempResource;\n      });\n      console.log(prevState.resources.find(item=>item.name===name).amount, \"old\");\n      console.log(newResources.find(item=>item.name===name).amount, \"new\");\n      return {resources: newResources}\n    });\n  }\n  render()\n    {\n    const buildings = this.state.buildings.map(buildingData=>\n      {\n      return(\n        <Building \n          name ={buildingData.name}\n          buyPrice={buildingData.buyPrice}\n          count = {buildingData.count}\n          subjectsOfIncrease = {buildingData.subjectsOfIncrease}\n          isBuyable = {buildingData.isBuyable}\n          sellPrice = {buildingData.sellPrice}\n          isUnlocked = {buildingData.isUnlocked}\n          HandleClick = {this.HandleClick}\n          key={buildingData.name}\n          \n        />)\n    });\n    const resources = this.state.resources.map(resourceData=>\n      {\n      return(\n\n        <Resource \n         name ={resourceData.name}\n         resouceMax = {resourceData.resourceMax}\n          isUnlocked = {resourceData.isUnlocked}\n          changePerTick = {resourceData.changePerTick}\n          counterTillStopped = {resourceData.countTillStopped}\n          amount={resourceData.amount}\n                 key={resourceData.name}\n\n        />)\n    })   \n\n    const clickers = this.state.clickers.map(clickerData=>\n      {\n      return(\n        <Clicker\n          name={clickerData.name}  \n          HandleClick = {this.gainResource}\n          value = {clickerData.amount}\n          key={clickerData.name}\n\n        />\n\n        )\n    })\n\n\n\n\n  return (\n\n        <div className=\"App\">\n        {buildings}\n        {resources}\n        {clickers}\n        </div>\n       );\n      }\n    \n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}